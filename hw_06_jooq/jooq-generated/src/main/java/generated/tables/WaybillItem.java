/*
 * This file is generated by jOOQ.
 */
package generated.tables;


import generated.Keys;
import generated.Public;
import generated.tables.records.WaybillItemRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WaybillItem extends TableImpl<WaybillItemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.waybill_item</code>
     */
    public static final WaybillItem WAYBILL_ITEM = new WaybillItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<WaybillItemRecord> getRecordType() {
        return WaybillItemRecord.class;
    }

    /**
     * The column <code>public.waybill_item.id</code>.
     */
    public final TableField<WaybillItemRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>public.waybill_item.waybill_id</code>.
     */
    public final TableField<WaybillItemRecord, Long> WAYBILL_ID = createField(DSL.name("waybill_id"), SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.waybill_item.item_id</code>.
     */
    public final TableField<WaybillItemRecord, Integer> ITEM_ID = createField(DSL.name("item_id"), SQLDataType.INTEGER, this, "");

    private WaybillItem(Name alias, Table<WaybillItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private WaybillItem(Name alias, Table<WaybillItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.waybill_item</code> table reference
     */
    public WaybillItem(String alias) {
        this(DSL.name(alias), WAYBILL_ITEM);
    }

    /**
     * Create an aliased <code>public.waybill_item</code> table reference
     */
    public WaybillItem(Name alias) {
        this(alias, WAYBILL_ITEM);
    }

    /**
     * Create a <code>public.waybill_item</code> table reference
     */
    public WaybillItem() {
        this(DSL.name("waybill_item"), null);
    }

    public <O extends Record> WaybillItem(Table<O> child, ForeignKey<O, WaybillItemRecord> key) {
        super(child, key, WAYBILL_ITEM);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Public.PUBLIC;
    }

    @Override
    public Identity<WaybillItemRecord, Long> getIdentity() {
        return (Identity<WaybillItemRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<WaybillItemRecord> getPrimaryKey() {
        return Keys.WAYBILL_ITEM_PK;
    }

    @Override
    public List<ForeignKey<WaybillItemRecord, ?>> getReferences() {
        return Arrays.asList(Keys.WAYBILL_ITEM__WAYBILL_ITEM_WAYBILL_ID_FKEY, Keys.WAYBILL_ITEM__WAYBILL_ITEM_ITEM_ID_FKEY);
    }

    private transient Waybill _waybill;
    private transient Item _item;

    public Waybill waybill() {
        if (_waybill == null)
            _waybill = new Waybill(this, Keys.WAYBILL_ITEM__WAYBILL_ITEM_WAYBILL_ID_FKEY);

        return _waybill;
    }

    public Item item() {
        if (_item == null)
            _item = new Item(this, Keys.WAYBILL_ITEM__WAYBILL_ITEM_ITEM_ID_FKEY);

        return _item;
    }

    @Override
    public WaybillItem as(String alias) {
        return new WaybillItem(DSL.name(alias), this);
    }

    @Override
    public WaybillItem as(Name alias) {
        return new WaybillItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public WaybillItem rename(String name) {
        return new WaybillItem(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public WaybillItem rename(Name name) {
        return new WaybillItem(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
